№35 
import numpy as np

A = np.random.randint(-10, 10, size=(7, 4))

print("Исходная матрица A:")
print(A)

positive_sums = np.sum(A > 0, axis=1)

print("\nОдномерный массив из сумм положительных элементов каждой строки матрицы:")
print(positive_sums)

№36
import numpy as np

A = np.random.randint(-10, 10, size=(5, 5))

print("Исходная матрица A:")
print(A)

min_values = np.min(A, axis=1)

print("\nОдномерный массив из минимальных элементов каждой строки матрицы:")
print(min_values)
№37
import numpy as np

A = np.random.randint(-10, 10, size=(5, 5))

print("Исходная матрица A:")
print(A)

nonzero_counts = np.count_nonzero(A, axis=1)

print("\nОдномерный массив из количеств ненулевых элементов каждой строки матрицы:")
print(nonzero_counts)

№38
import numpy as np

B = np.random.randint(-10, 10, size=(5, 5))

print("Исходная матрица B:")
print(B)

negative_products = np.prod(B[B < 0], axis=0)

print("\nОдномерный массив из произведений отрицательных элементов каждого столбца матрицы:")
print(negative_products)

№39
import numpy as np

A = np.random.randint(-10, 10, size=(5, 5))

print("Исходная матрица A:")
print(A)

min_values = np.min(A, axis=1)

print("\nОдномерный массив из минимальных элементов каждой строки матрицы:")
print(min_values)

№40
import numpy as np

# Сформировать матрицу A с помощью генератора случайных чисел
A = np.random.randint(-10, 10, size=(5, 5))

# Вывести матрицу A
print("Исходная матрица A:")
print(A)

# Сформировать одномерный массив из количеств ненулевых элементов каждой строки матрицы
nonzero_counts = np.count_nonzero(A, axis=1)

# Вывести одномерный массив
print("\nОдномерный массив из количеств ненулевых элементов каждой строки матрицы:")
print(nonzero_counts)
